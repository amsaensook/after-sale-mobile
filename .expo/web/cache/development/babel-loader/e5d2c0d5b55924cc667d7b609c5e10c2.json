{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useQuery, useMutation, useQueryClient } from \"react-query\";\nimport { httpClient } from \"../services/axios\";\nexport var useReceiveReturn = function useReceiveReturn() {\n  var getReceiveReturn = function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(httpClient.get('/receive_return'));\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n  return useQuery(\"ReceiveReturn\", function () {\n    return getReceiveReturn();\n  }, {\n    enabled: true,\n    refetchOnWindowFocus: true,\n    refetchOnMount: true\n  });\n};\nexport var useReceiveReturnItem = function useReceiveReturnItem(_ref) {\n  var Rec_ID = _ref.Rec_ID;\n  var getReceiveReturnItem = function _callee2(Rec_ID) {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(httpClient.get(\"/receive_return_item?Rec_ID=\" + Rec_ID));\n          case 2:\n            return _context2.abrupt(\"return\", _context2.sent);\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n  return useQuery([\"ReceiveReturnItem\", Rec_ID], function () {\n    return getReceiveReturnItem(Rec_ID);\n  }, {\n    enabled: true\n  });\n};\nexport var useExecReceiveReturnTransactions = function useExecReceiveReturnTransactions() {\n  var queryClient = useQueryClient();\n  var execReceiveReturnTransactions = function _callee3(params) {\n    var data;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            data = new FormData();\n            Object.keys(params).forEach(function (value) {\n              data.append(value, params[value] || \"\");\n            });\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(httpClient.post(\"/exec_receive_return_transaction\", data));\n          case 4:\n            return _context3.abrupt(\"return\", _context3.sent);\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n  return useMutation(\"ExecReceiveReturnTransactions\", function (params) {\n    return execReceiveReturnTransactions(params);\n  }, {\n    onSuccess: function onSuccess(response) {\n      queryClient.invalidateQueries('ReceiveReturnItem');\n    },\n    onError: function onError(error) {\n      var _error$response, _error$response$data;\n      console.log((error == null ? void 0 : (_error$response = error.response) == null ? void 0 : (_error$response$data = _error$response.data) == null ? void 0 : _error$response$data.message) || error.message);\n    }\n  });\n};\nexport var useUpdateReceiveReturn = function useUpdateReceiveReturn() {\n  var queryClient = useQueryClient();\n  var updateReceiveReturn = function _callee4(params) {\n    var data;\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            data = new FormData();\n            Object.keys(params).forEach(function (value) {\n              data.append(value, params[value] || \"\");\n            });\n            _context4.next = 4;\n            return _regeneratorRuntime.awrap(httpClient.post(\"/update_receive_return\", data));\n          case 4:\n            return _context4.abrupt(\"return\", _context4.sent);\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n  return useMutation(\"UpdateReceiveReturn\", function (params) {\n    return updateReceiveReturn(params);\n  }, {\n    onSuccess: function onSuccess(response) {\n      queryClient.invalidateQueries('ReceiveReturn');\n    },\n    onError: function onError(error) {\n      var _error$response2, _error$response2$data;\n      console.log((error == null ? void 0 : (_error$response2 = error.response) == null ? void 0 : (_error$response2$data = _error$response2.data) == null ? void 0 : _error$response2$data.message) || error.message);\n    }\n  });\n};","map":{"version":3,"names":["useQuery","useMutation","useQueryClient","httpClient","useReceiveReturn","getReceiveReturn","_callee","_regeneratorRuntime","async","_callee$","_context","prev","next","awrap","get","abrupt","sent","stop","Promise","enabled","refetchOnWindowFocus","refetchOnMount","useReceiveReturnItem","_ref","Rec_ID","getReceiveReturnItem","_callee2","_callee2$","_context2","useExecReceiveReturnTransactions","queryClient","execReceiveReturnTransactions","_callee3","params","data","_callee3$","_context3","FormData","Object","keys","forEach","value","append","post","onSuccess","response","invalidateQueries","onError","error","_error$response","_error$response$data","console","log","message","useUpdateReceiveReturn","updateReceiveReturn","_callee4","_callee4$","_context4","_error$response2","_error$response2$data"],"sources":["D:/after-sale-mobile/src/hooks/useReceiveReturn.ts"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from \"react-query\";\r\nimport { httpClient } from \"../services/axios\";\r\n\r\nexport const useReceiveReturn = () => {\r\n  const getReceiveReturn = async () => {\r\n    return await httpClient.get('/receive_return');\r\n  };\r\n  return useQuery(\r\n    \"ReceiveReturn\",\r\n    () => getReceiveReturn(),\r\n    {\r\n      enabled: true,\r\n      refetchOnWindowFocus: true,\r\n      refetchOnMount: true,\r\n      //staleTime: 30000, // not to refresh the data from API is 30 seconds\r\n    }\r\n  );\r\n};\r\n\r\nexport const useReceiveReturnItem = ({Rec_ID}: any) => {\r\n\r\n  const getReceiveReturnItem = async (Rec_ID: any) => {\r\n    \r\n    return await httpClient.get(`/receive_return_item?Rec_ID=${Rec_ID}`);\r\n  };\r\n  return useQuery<any, any, any>(\r\n    [\"ReceiveReturnItem\", Rec_ID],\r\n    () => getReceiveReturnItem(Rec_ID),\r\n    {\r\n      enabled: true,\r\n    }\r\n  );\r\n};\r\n\r\nexport const useExecReceiveReturnTransactions = () => {\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  const execReceiveReturnTransactions = async (params: any): Promise<any> => {\r\n    let data = new FormData();\r\n\r\n    Object.keys(params).forEach((value) => {\r\n      data.append(value, params[value] || \"\");\r\n    });\r\n\r\n    return await httpClient.post(\"/exec_receive_return_transaction\", data);\r\n  };\r\n\r\n  return useMutation<any, any, any>(\r\n    \"ExecReceiveReturnTransactions\",\r\n    (params) => execReceiveReturnTransactions(params),\r\n    {\r\n      onSuccess: (response) => {\r\n\r\n        queryClient.invalidateQueries('ReceiveReturnItem');\r\n\r\n      },\r\n      onError: (error) => {\r\n\r\n        console.log(error?.response?.data?.message || error.message);\r\n\r\n      },\r\n    }\r\n  );\r\n};\r\n\r\nexport const useUpdateReceiveReturn = () => {\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  const updateReceiveReturn = async (params: any): Promise<any> => {\r\n    let data = new FormData();\r\n\r\n    Object.keys(params).forEach((value) => {\r\n      data.append(value, params[value] || \"\");\r\n    });\r\n\r\n    return await httpClient.post(\"/update_receive_return\", data);\r\n  };\r\n\r\n  return useMutation<any, any, any>(\r\n    \"UpdateReceiveReturn\",\r\n    (params) => updateReceiveReturn(params),\r\n    {\r\n      onSuccess: (response) => {\r\n\r\n        queryClient.invalidateQueries('ReceiveReturn');\r\n\r\n      },\r\n      onError: (error) => {\r\n\r\n        console.log(error?.response?.data?.message || error.message);\r\n\r\n      },\r\n    }\r\n  );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}