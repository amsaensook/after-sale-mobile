{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useMutation } from \"react-query\";\nimport { httpClient } from \"../services/axios\";\nexport var useUpdateReturnPart = function useUpdateReturnPart() {\n  var updateReturnPart = function _callee(params) {\n    var data;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            data = new FormData();\n            data.append('Items', JSON.stringify(params) || \"\");\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(httpClient.post(\"/update_return_part\", data));\n          case 4:\n            return _context.abrupt(\"return\", _context.sent);\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n  return useMutation(\"UpdateReturnPart\", function (params) {\n    return updateReturnPart(params);\n  }, {\n    onSuccess: function onSuccess(response) {},\n    onError: function onError(error) {\n      var _error$response, _error$response$data;\n      console.log((error == null ? void 0 : (_error$response = error.response) == null ? void 0 : (_error$response$data = _error$response.data) == null ? void 0 : _error$response$data.message) || error.message);\n    }\n  });\n};","map":{"version":3,"names":["useMutation","httpClient","useUpdateReturnPart","updateReturnPart","_callee","params","data","_regeneratorRuntime","async","_callee$","_context","prev","next","FormData","append","JSON","stringify","awrap","post","abrupt","sent","stop","Promise","onSuccess","response","onError","error","_error$response","_error$response$data","console","log","message"],"sources":["D:/after-sale-mobile/src/hooks/useReturnPart.ts"],"sourcesContent":["import { useMutation } from \"react-query\";\r\nimport { httpClient } from \"../services/axios\";\r\n\r\nexport const useUpdateReturnPart = () => {\r\n\r\n  const updateReturnPart = async (params: any): Promise<any> => {\r\n    let data = new FormData();\r\n\r\n    data.append('Items', JSON.stringify(params) || \"\");\r\n\r\n    return await httpClient.post(\"/update_return_part\", data);\r\n  };\r\n\r\n  return useMutation<any, any, any>(\r\n    \"UpdateReturnPart\",\r\n    (params) => updateReturnPart(params),\r\n    {\r\n      onSuccess: (response) => {\r\n\r\n      },\r\n      onError: (error) => {\r\n\r\n        console.log(error?.response?.data?.message || error.message);\r\n\r\n      },\r\n    }\r\n  );\r\n};\r\n\r\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,UAAU;AAEnB,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAA,EAAS;EAEvC,IAAMC,gBAAgB,GAAG,SAAAC,QAAOC,MAAW;IAAA,IAAAC,IAAA;IAAA,OAAAC,mBAAA,CAAAC,KAAA,UAAAC,SAAAC,QAAA;MAAA;QAAA,QAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YACrCN,IAAI,GAAG,IAAIO,QAAQ,EAAE;YAEzBP,IAAI,CAACQ,MAAM,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACX,MAAM,CAAC,IAAI,EAAE,CAAC;YAACK,QAAA,CAAAE,IAAA;YAAA,OAAAL,mBAAA,CAAAU,KAAA,CAEtChB,UAAU,CAACiB,IAAI,CAAC,qBAAqB,EAAEZ,IAAI,CAAC;UAAA;YAAA,OAAAI,QAAA,CAAAS,MAAA,WAAAT,QAAA,CAAAU,IAAA;UAAA;UAAA;YAAA,OAAAV,QAAA,CAAAW,IAAA;QAAA;MAAA;IAAA,qBAAAC,OAAA;EAAA,CAC1D;EAED,OAAOtB,WAAW,CAChB,kBAAkB,EAClB,UAACK,MAAM;IAAA,OAAKF,gBAAgB,CAACE,MAAM,CAAC;EAAA,GACpC;IACEkB,SAAS,EAAE,SAAAA,UAACC,QAAQ,EAAK,CAEzB,CAAC;IACDC,OAAO,EAAE,SAAAA,QAACC,KAAK,EAAK;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MAElBC,OAAO,CAACC,GAAG,CAAC,CAAAJ,KAAK,qBAAAC,eAAA,GAALD,KAAK,CAAEF,QAAQ,sBAAAI,oBAAA,GAAfD,eAAA,CAAiBrB,IAAI,qBAArBsB,oBAAA,CAAuBG,OAAO,KAAIL,KAAK,CAACK,OAAO,CAAC;IAE9D;EACF,CAAC,CACF;AACH,CAAC"},"metadata":{},"sourceType":"module"}