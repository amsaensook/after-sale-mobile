{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\", \"debug\"];\nimport { getStyleAndFilteredProps, propConfig } from \"../theme/styled-system\";\nimport { useTheme } from \"./useTheme\";\nimport React from 'react';\nimport { useNativeBaseConfig } from \"../core/NativeBaseContext\";\nimport { useResponsiveQuery } from \"../utils/useResponsiveQuery\";\nimport stableHash from 'stable-hash';\nvar getStyledSystemPropsAndRestProps = function getStyledSystemPropsAndRestProps(props) {\n  var styledSystemProps = {};\n  var restProps = {};\n  for (var key in props) {\n    if (key in propConfig) {\n      styledSystemProps[key] = props[key];\n    } else {\n      restProps[key] = props[key];\n    }\n  }\n  return {\n    styledSystemProps: styledSystemProps,\n    restProps: restProps\n  };\n};\nexport var useStyledSystemPropsResolver = function useStyledSystemPropsResolver(_ref) {\n  var propStyle = _ref.style,\n    debug = _ref.debug,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var theme = useTheme();\n  var _useNativeBaseConfig = useNativeBaseConfig('makeStyledComponent'),\n    currentBreakpoint = _useNativeBaseConfig.currentBreakpoint,\n    config = _useNativeBaseConfig.config;\n  var strictMode = config.strictMode;\n  var _useResponsiveQuery = useResponsiveQuery(),\n    getResponsiveStyles = _useResponsiveQuery.getResponsiveStyles;\n  var _getStyledSystemProps = getStyledSystemPropsAndRestProps(props),\n    styledSystemProps = _getStyledSystemProps.styledSystemProps,\n    restProps = _getStyledSystemProps.restProps;\n  var _React$useMemo = React.useMemo(function () {\n      var _getStyleAndFilteredP = getStyleAndFilteredProps({\n          styledSystemProps: styledSystemProps,\n          theme: theme,\n          debug: debug,\n          currentBreakpoint: currentBreakpoint,\n          strictMode: strictMode,\n          getResponsiveStyles: getResponsiveStyles\n        }),\n        styleSheet = _getStyleAndFilteredP.styleSheet,\n        dataSet = _getStyleAndFilteredP.dataSet;\n      if (propStyle) {\n        return {\n          style: [styleSheet.box, propStyle],\n          dataSet: dataSet\n        };\n      } else {\n        return {\n          style: styleSheet.box,\n          dataSet: dataSet\n        };\n      }\n    }, [stableHash(styledSystemProps), theme, debug, currentBreakpoint, strictMode, propStyle, getResponsiveStyles, props]),\n    style = _React$useMemo.style,\n    dataSet = _React$useMemo.dataSet;\n  if (\"development\" === 'development' && debug) {\n    console.log('style,resprops', currentBreakpoint);\n  }\n  restProps.dataSet = dataSet;\n  return [style, restProps];\n};","map":{"version":3,"sources":["useStyledSystemPropsResolver.ts"],"names":["getStyleAndFilteredProps","propConfig","useTheme","React","useNativeBaseConfig","useResponsiveQuery","stableHash","getStyledSystemPropsAndRestProps","props","styledSystemProps","restProps","key","useStyledSystemPropsResolver","style","propStyle","debug","theme","currentBreakpoint","config","strictMode","getResponsiveStyles","dataSet","useMemo","styleSheet","box","process","console","log"],"mappings":"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","sourcesContent":["import { getStyleAndFilteredProps, propConfig } from '../theme/styled-system';\nimport { useTheme } from './useTheme';\nimport React from 'react';\nimport { useNativeBaseConfig } from '../core/NativeBaseContext';\nimport { useResponsiveQuery } from '../utils/useResponsiveQuery';\n//@ts-ignore\nimport stableHash from 'stable-hash';\n\nconst getStyledSystemPropsAndRestProps = (props: any) => {\n  const styledSystemProps: any = {};\n  const restProps: any = {};\n\n  for (let key in props) {\n    if (key in propConfig) {\n      styledSystemProps[key] = props[key];\n    } else {\n      restProps[key] = props[key];\n    }\n  }\n\n  return { styledSystemProps, restProps };\n};\n\nexport const useStyledSystemPropsResolver = ({\n  style: propStyle,\n  debug,\n  ...props\n}: any) => {\n  const theme = useTheme();\n  const { currentBreakpoint, config } = useNativeBaseConfig(\n    'makeStyledComponent'\n  );\n  const strictMode = config.strictMode;\n\n  const { getResponsiveStyles } = useResponsiveQuery();\n\n  const { styledSystemProps, restProps } = getStyledSystemPropsAndRestProps(\n    props\n  );\n\n  const { style, dataSet } = React.useMemo(() => {\n    const { styleSheet, dataSet } = getStyleAndFilteredProps({\n      styledSystemProps,\n      theme,\n      debug,\n      currentBreakpoint,\n      strictMode,\n      getResponsiveStyles,\n    });\n    if (propStyle) {\n      return { style: [styleSheet.box, propStyle], dataSet };\n    } else {\n      return { style: styleSheet.box, dataSet };\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    stableHash(styledSystemProps),\n    theme,\n    debug,\n    currentBreakpoint,\n    strictMode,\n    propStyle,\n    getResponsiveStyles,\n    props,\n  ]);\n  if (process.env.NODE_ENV === 'development' && debug) {\n    /* eslint-disable-next-line */\n    console.log('style,resprops', currentBreakpoint);\n  }\n\n  restProps.dataSet = dataSet;\n\n  return [style, restProps];\n};\n"]},"metadata":{},"sourceType":"module"}